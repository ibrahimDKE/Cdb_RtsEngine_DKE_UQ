/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cdb;
import DImsStats.ColumnSorter;
import DImsStats.Gvar;
import DImsStats.Metadata;
import Visualization.VisualizationForm;
import cdb.Constants.AggregateFunctions;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author himos
 */
public  class Cdb_Gui extends javax.swing.JFrame {

    /**
     * Creates new form Cdb_Gui
     */
    public Cdb_Gui() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jComboBox1 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox7 = new javax.swing.JCheckBox();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jCheckBox8 = new javax.swing.JCheckBox();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jComboBox4 = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SeeDB Settings");

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("noAggregateQueryOptimization");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setSelected(true);
        jCheckBox2.setText("optimizeAll");
        jCheckBox2.setToolTipText("false = apply all optimizations");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox3.setText("combineMultipleAggregates");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jCheckBox4.setText("combineMultipleGroupBys");
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });

        jCheckBox5.setSelected(true);
        jCheckBox5.setText("mergeQueries");
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });

        jCheckBox6.setText("useParallelExecution");
        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "EARTH_MOVER_DISTANCE", "EUCLIDEAN_DISTANCE", "COSINE_DISTANCE", "FIDELITY_DISTANCE", "CHI_SQUARED_DISTANCE", "KULLBACK_LEIBLER_DISTANCE" }));

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("select * from olympicathletes where dim6='Swimming'");
        jTextArea1.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextArea1);
        jTextArea1.setText("select * from olympicathletes where dim6='Swimming'");

        jButton1.setText("Execute");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel1.setText("Query 1:");

        jCheckBox7.setSelected(true);
        jCheckBox7.setText("Detect Dimesions Correlation");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "olympicathletes", "flights", "ontime", "ontime_1m", "ontime2008", "GoCard", "GoCard2", "syn_500k", "sales", "seedb_e2e_test", "dd", " " }));
        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });
        jComboBox2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox2MouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel2.setText("Metric");

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel3.setText("DataSet");

        jTextField1.setText("10");
        jTextField1.setToolTipText("");

        jLabel4.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel4.setText("K Views");

        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setText("select * from olympicathletes where dim6='Diving'");
        jTextArea2.setWrapStyleWord(true);
        jScrollPane2.setViewportView(jTextArea2);

        jLabel5.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel5.setText("Query 2:");

        jCheckBox8.setSelected(true);
        jCheckBox8.setText("Normalize Distribution");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Sum", "Avg", "Count", "Max", "Min" }));
        //jComboBox3.setVisible(false);
        //jLabel6.setVisible(false);

        jLabel6.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel6.setText("Aggregate Function");

        jLabel7.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel7.setText("Number of attributes");

        jTextField2.setText("0");
        jTextField2.setToolTipText("");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        jLabel8.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel8.setText("Time limit");

        jTextField3.setText("0");
        jTextField3.setToolTipText("");

        jButton2.setText("Show Graphs");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sela Eq1", "N-N'", "DimsHistograms", "SeeDB_Random" }));
        jComboBox4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox4ItemStateChanged(evt);
            }
        });
        jComboBox4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox4MouseClicked(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel9.setText("Prioirty Algo");

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No Cost", "Actual Cost", "DBEst Cost", "Appro CostModel" }));
        jComboBox5.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox5ItemStateChanged(evt);
            }
        });
        jComboBox5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox5MouseClicked(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel10.setText("Cost Algo");

        jLabel11.setText("Total Utility Top(K)=");

        jLabel12.setText("Total Cost of Sapce=");

        jTextField4.setText("0");

        jTextField5.setText("0");

        jButton3.setText("Compute Cost");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jCheckBox6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jCheckBox5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jCheckBox4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jCheckBox3, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                                        .addComponent(jCheckBox2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jCheckBox7))
                                    .addComponent(jCheckBox8))
                                .addGap(0, 86, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10))
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBox5, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBox4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(90, 90, 90)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField1))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(150, 150, 150)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox8)
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
      
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jCheckBox6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ExperimentalSettings es= new ExperimentalSettings();
        DBSettings S= new DBSettings();
        es= es.getDefault();
        SeeDB ccdb= new SeeDB();
        
        if(jCheckBox1.isSelected()){ es.noAggregateQueryOptimization=true;}
        else{es.noAggregateQueryOptimization=false;}
        
        if(jCheckBox2.isSelected()){ es.optimizeAll=true;}
        else{es.optimizeAll=false;}
        
        if(jCheckBox3.isSelected()){ es.combineMultipleAggregates=true;}
        else{es.combineMultipleAggregates=false;}
        
        if(jCheckBox4.isSelected()){ es.combineMultipleGroupBys=true;}
        else{es.combineMultipleGroupBys=false;}
        
        if(jCheckBox5.isSelected()){ es.mergeQueries=true;}
        else{es.mergeQueries=false;}
        
        if(jCheckBox6.isSelected()){ es.useParallelExecution=true;}
        else{es.useParallelExecution=false;}
        
        if(jCheckBox7.isSelected()){ es.CorrelationDetection=true;}
        else{es.CorrelationDetection=false;}
        
        if(jCheckBox8.isSelected()){ es.normalizeDistributions=true;}
        else{es.normalizeDistributions=false;}
        es.useTempTables=true;
        
        String metric=jComboBox1.getSelectedItem().toString();
        if (metric=="EARTH_MOVER_DISTANCE")
        es.distanceMetric=ExperimentalSettings.DistanceMetric.EARTH_MOVER_DISTANCE;
        else if (metric=="EUCLIDEAN_DISTANCE")
            es.distanceMetric=ExperimentalSettings.DistanceMetric.EUCLIDEAN_DISTANCE;
        else if (metric=="COSINE_DISTANCE")
            es.distanceMetric=ExperimentalSettings.DistanceMetric.COSINE_DISTANCE;
        else if (metric=="FIDELITY_DISTANCE")
            es.distanceMetric=ExperimentalSettings.DistanceMetric.FIDELITY_DISTANCE;
        else if (metric=="CHI_SQUARED_DISTANCE")
            es.distanceMetric=ExperimentalSettings.DistanceMetric.CHI_SQUARED_DISTANCE;
         else if (metric=="KULLBACK_LEIBLER_DISTANCE")
            es.distanceMetric=ExperimentalSettings.DistanceMetric.KULLBACK_LEIBLER_DISTANCE;

        
        String AggFun=jComboBox3.getSelectedItem().toString();
        if (AggFun=="All")
        {es.Globalfunc=AggregateFunctions.ALL;}
        else if (AggFun=="Sum")
        {es.Globalfunc=AggregateFunctions.SUM;}
        else if (AggFun=="Avg")
        {es.Globalfunc=Constants.AggregateFunctions.AVG;}
        else if (AggFun=="Count")
        {es.Globalfunc=Constants.AggregateFunctions.COUNT;}
         else if (AggFun=="Max")
        {es.Globalfunc=Constants.AggregateFunctions.MAX;}
         else if (AggFun=="Min")
        {es.Globalfunc=Constants.AggregateFunctions.MIN;}
        
        int Sel=Integer.parseInt( jTextField2.getText());
        if (Sel>0){ es.DimSelectvity=Sel;}
        
        es.TestData=jComboBox2.getSelectedItem().toString();
        es.Kviews=Integer.parseInt(jTextField1.getText().toString());
        es.extime=Integer.parseInt(jTextField3.getText().toString());
      //  jTextArea1.setText("select * from olympicathletes where dim6='Swimming'");
        String Query1= jTextArea1.getText();
        String Query2= jTextArea2.getText();
        String Sela=jComboBox4.getSelectedItem().toString();
        if (Sela=="Sela Eq1")
        es.Sela_shallow=1;
        else if (Sela=="Sela Eq2")
             es.Sela_shallow=2;
        else if (Sela=="N-N'")
             es.Sela_shallow=3;
        else if (Sela=="Gvari")
             es.Sela_shallow=4;
        else if (Sela=="DimsHistograms")
            es.Sela_shallow=5;
        else if (Sela=="SeeDB_Random")
            es.Sela_shallow=6;
        String Cost=jComboBox5.getSelectedItem().toString();
         if (Cost=="No Cost")
        es.Compute_Cost=0;
        else if (Cost=="Actual Cost")
             es.Compute_Cost=1;
        else if (Cost=="DBEst Cost")
             es.Compute_Cost=2;
         else if (Cost=="Appro CostModel")
             es.Compute_Cost=3;
         
        long start = System.currentTimeMillis();
        try {
             ccdb.connectToDatabase(S.getDefault());
             if (Query2.equals("")){ 
                 //Query1=Querymod(Query1);
                  es.comparisonType=ExperimentalSettings.ComparisonType.ONE_DATASET_FULL;
                 ccdb.initialize(Query1, null,es);
                //System.out.println("ss");
             }
             else{
                // Query1=Querymod(Query1);
                // Query2=Querymod(Query2);
                 es.comparisonType=ExperimentalSettings.ComparisonType.TWO_DATASETS;
                 ccdb.initialize(Query1, Query2,es); 
                 }
             
             List<AllDataViews> AllDviews=new ArrayList<AllDataViews>();
             AllDviews=ccdb.computeDifference();
             
            System.out.println( "Total SeeDB Execution Time: " + (System.currentTimeMillis() - start));
             
             DefaultTableModel m=PopResultintable(AllDviews); 
             
             
             if (jTable1.getRowCount()>0) {
              DefaultTableModel oldmod=(DefaultTableModel) jTable1.getModel();
               
              ComputeError(oldmod , m ,  es.Kviews);   
             }else {
              ComputeError(m , m ,  es.Kviews);   
             }
             jTable1.setModel(m);
             System.out.println("Finished.....");
            
             
        }
        catch (Exception ex)
            {
                System.out.println(ex);
            }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        // TODO add your handling code here:
       if (evt.getStateChange()==ItemEvent.DESELECTED){
       
       String tblname=jComboBox2.getSelectedItem().toString();
       
       if(tblname.equals("votesus")){
                    jTextArea1.setText("Select * from votesus where dim2='Dem'");
                    jTextArea2.setText("Select * from votesus where dim2='GOP'");
                   // System.out.println("A");
                    }else if ((tblname.equals("olympicathletes"))){
                    jTextArea1.setText("select * from olympicathletes where dim6='Swimming'");
                    jTextArea2.setText("select * from olympicathletes where dim6='Diving'");
                    }
                    else if ((tblname.equals("ontime"))){
                    jTextArea1.setText("select * from ontime where dim6='Boston'");
                    jTextArea2.setText("select * from ontime where dim7='Boston'");
                    }
                    else if ((tblname.equals("seedb_e2e_test"))){
                    jTextArea1.setText("select * from seedb_e2e_test where dim1_3='abc'");
                    jTextArea2.setText("select * from seedb_e2e_test where dim1_3='def'");
                    }
                    else if ((tblname.equals("GoCard"))){
                    jTextArea1.setText("select * from gocard where dim_direction='Inbound'");
                    jTextArea2.setText("select * from gocard where dim_direction='Outbound'");
                    }
       else if ((tblname.equals("sales"))){
                    jTextArea1.setText("select * from sales where ids<=10000");
                    jTextArea2.setText("select * from sales where ids<=10000");
                    }
         
       }
    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void jComboBox2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox2MouseClicked
        // TODO add your handling code here:
        //if (evt.getStateChange()==ItemEvent.DESELECTED)
         //{
         if(jComboBox1.getSelectedItem().equals("votesus")){
                    jTextArea1.setText("Select * from votesus where dim2='Dem'");
                    System.out.println("A");
                    }else{
                    jTextArea1.setText("select * from olympicathletes where dim6='Swimming'");
                    }
         //}
    }//GEN-LAST:event_jComboBox2MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        // TODO add your handling code here:
        String tbl=jComboBox2.getSelectedItem().toString();
        String whrtbl1=jTextArea1.getText();
       
        whrtbl1=whrtbl1.substring( whrtbl1.indexOf("where"),whrtbl1.length());
       
        String whrtbl2=jTextArea2.getText();
         if(!whrtbl2.isEmpty()||!whrtbl2.equals("")){
        whrtbl2=whrtbl2.substring( whrtbl2.indexOf("where"),whrtbl2.length());
         }else {whrtbl2="";}
        new VisualizationForm(tbl,whrtbl1,whrtbl2,jTable1.getModel()).setVisible(true);
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox4ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox4ItemStateChanged

    private void jComboBox4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox4MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox4MouseClicked

    private void jComboBox5ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox5ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox5ItemStateChanged

    private void jComboBox5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox5MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox5MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
         
               
        String TableName=jComboBox2.getSelectedItem().toString();
        int Kviews=Integer.parseInt(jTextField1.getText().toString());
        jLabel11.setText("Total Utility Top("+Kviews+")=");
        String metric=jComboBox1.getSelectedItem().toString();
        String Cost=jComboBox5.getSelectedItem().toString();
//         if (Cost=="No Cost")
//        es.Compute_Cost=0;
//        else if (Cost=="Actual Cost")
//             es.Compute_Cost=1;
//        else if (Cost=="DBEst Cost")
//             es.Compute_Cost=2;
         DefaultTableModel Views=(DefaultTableModel) jTable1.getModel(); 
         String Whr1=jTextArea1.getText();
         Whr1=Whr1.substring (Whr1.indexOf("where"), Whr1.length());
         String Whr2=jTextArea2.getText();
         
         System.out.println("Whr1:"+Whr1);
         if(!Whr2.isEmpty()){
         Whr2=Whr2.substring (Whr2.indexOf("where"), Whr2.length());
         
         System.out.println("Whr2:"+Whr2);
         }
         try{
             Metadata mg = new Metadata(TableName, 
				"postgresql", "127.0.0.1/postgres", "postgres", "himos");
             double SpaceCost=0;
             double totalUt=0;
             Gvar g= new Gvar();
             long Start=System.currentTimeMillis();
             for(int i=0;i<Views.getRowCount();i++){
                 String ViewName= Views.getValueAt(i, 0).toString();
                 String DimAtt=ViewName.substring(0, ViewName.indexOf("__"));
                 String MesAtt=ViewName.substring(ViewName.indexOf("__")+2,ViewName.length());
                 String Func=Views.getValueAt(i, 3).toString();
                // System.out.println("DimAtt:"+DimAtt +"  MesAtt:"+MesAtt +"  Func:"+Func);
                 double ViewCost=0;
                 if (Cost=="Actual Cost"){
                  ViewCost=g.ComputeViewActualRunCost(mg, DimAtt, MesAtt, Func, TableName, Whr1, Whr2) 
                            + g.ComputeViewActualDistCost(mg, metric, DimAtt, MesAtt, Func, TableName, Whr1, Whr2);
                 }
                 else if (Cost=="DBEst Cost"){
                     ViewCost=0;
//                     ViewCost=g.ComputeViewActualDBRunCost(mg, DimAtt, MesAtt, Func, TableName, Whr1, Whr2) 
//                            + g.ComputeViewActualDistCost(mg, metric, DimAtt, MesAtt, Func, TableName, Whr1, Whr2);
                 }
                     
                 double ViewUtil=Double.parseDouble( Views.getValueAt(i, 2).toString());
                 
                 SpaceCost=SpaceCost+ViewCost;
                 totalUt=totalUt+ViewUtil;
                  if (i<Kviews)
                 System.out.println("View :"+DimAtt+"  Func("+Func +")  MesAtt: "+MesAtt +" Cost=" +ViewCost + " Utility= "+ViewUtil);
                 if (i==Kviews){
                     jTextField4.setText(String.valueOf(totalUt));
                     
                 System.out.println("Space View Cost for Top("+Kviews+")=" +SpaceCost +" Gained Utility= "+totalUt +" Profit="+(totalUt/SpaceCost));
                 }
                 
             }
             System.out.println("Total Execution time:"+(System.currentTimeMillis()-Start));
             jTextField5.setText(String.valueOf (SpaceCost));
         } catch (Exception e) {e.printStackTrace();}
         
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
   
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cdb_Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cdb_Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cdb_Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cdb_Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cdb_Gui().setVisible(true);
            }
        });
    }
    
    public static String Querymod(String query){
        String dim="";
        String bfwhere=query.substring(0, query.indexOf("where")+5);
        String val=query.substring(query.indexOf("="),query.length());
        query=query.toLowerCase();
        dim=query.substring( query.indexOf("where")+6, query.indexOf("="));
        System.out.println(dim);
        if (dim.equalsIgnoreCase("month")){
            dim="dim1";
                  }
        else if(dim.equalsIgnoreCase("dayofweek")){
            dim="dim2";
        }
        else if(dim.equalsIgnoreCase("uniquecarrier")){
            dim="dim4";
        }
        else if(dim.equalsIgnoreCase("flightnum")){
            dim="dim5";
        }
        else if(dim.equalsIgnoreCase("origin")){
            dim="dim6";
        }else if(dim.equalsIgnoreCase("dest")){
            dim="dim7";
        }else if(dim.equalsIgnoreCase("cancellationcode")){
            dim="dim8";
        }
        else if(dim.equalsIgnoreCase("actualelapsedtime")){
            dim="measure1";
        }
        else if(dim.equalsIgnoreCase("crselapsedtime")){
            dim="measure2";
        }
        else if(dim.equalsIgnoreCase("airtime")){
            dim="measure3";
        }
        else if(dim.equalsIgnoreCase("arrdelay")){
            dim="measure4";
        }
        else if(dim.equalsIgnoreCase("depdelay")){
            dim="measure5";
        }
        else if(dim.equalsIgnoreCase("distance")){
            dim="measure6";
        }else if(dim.equalsIgnoreCase("carrierdelay")){
            dim="measure7";
        }
        else if(dim.equalsIgnoreCase("weatherdelay")){
            dim="measure8";
        }
        else if(dim.equalsIgnoreCase("nasdelay")){
            dim="measure9";
        }
        else if(dim.equalsIgnoreCase("securitydelay")){
            dim="measure10";
        }
        else if(dim.equalsIgnoreCase("lateaircraftdelay")){
            dim="measure11";
        }
        else {dim=dim;}
        
        
        query=" "+bfwhere+" "+dim+val;
        return query;
    }
    
    public static DefaultTableModel PopResultintable(List<AllDataViews> AllDviews){
        DefaultTableModel result = new DefaultTableModel();
                        result.addColumn("View_id");
                        result.addColumn("View Name");
                        result.addColumn("View Utility");
                        result.addColumn("Agg Function");
                         for (int i = 0; i < AllDviews.size(); i++){
                             if(AllDviews.get(i).util>=0){
                              Vector textData = new Vector();
                                textData.add(AllDviews.get(i).Viewid);
                                textData.add(AllDviews.get(i).ViewName);
                                textData.add(AllDviews.get(i).util);
                                textData.add(AllDviews.get(i).Funct);
                                result.addRow(textData );
                             }
                         }
                         return result;
    }
    
    public static void ComputeError(DefaultTableModel Basel , DefaultTableModel Optmi, int k){
       
                        double sum1=0.0;
                        double sum2=0.0;
                        double counter=0;
                        double utility_Optmi=0.0;
                        double utility_Basel=0.0;
                        int Optisize=Optmi.getRowCount();
                        int Baselsize=Basel.getRowCount();
//                        double sumOptmi=0.0;
//                        double sumBasel=0.0;
                        if (Optisize>Baselsize) Optisize=Baselsize;
                        else Baselsize=Optisize;
                        
                        if (k>Baselsize ) k=Baselsize;
                        
                         for (int i = 0; i < k; i++){
                              
                              utility_Basel=Double.parseDouble(Basel.getValueAt(i, 2).toString());
                              utility_Optmi=Double.parseDouble(Optmi.getValueAt(i, 2).toString());
//                             if (i>optisize) {utility_Optmi=0;} 
//                             else {
//                                 utility_Optmi=Double.parseDouble(Optmi.getValueAt(i, 2).toString());
//                             }
//                             sumOptmi=sumOptmi+utility_Optmi;
//                             sumBasel=sumBasel+utility_Basel;
                             
                             if (utility_Optmi==utility_Basel){counter++; }
                             sum2=sum2+(Math.abs(utility_Basel-utility_Optmi)/ 1);
                             if(utility_Basel>0){
                             
                             sum1=sum1+(Math.abs(utility_Basel-utility_Optmi)/ utility_Basel);
                             
                             
                             }
                         }
                         double err=sum1/k;
                         double Acc=counter/k*100;
                         
                         System.out.println("The Accuracy=\t"+Acc+" %");
                         System.out.println("The utility Distnace=\t"+(sum2/k));
                   //      System.out.println("The utility Distnace2=\t"+((sumBasel-sumOptmi)/k));
                         System.out.println("The Relative Error=\t"+err);
                         
                         
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    public static javax.swing.JComboBox jComboBox1;
    public static javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    public static javax.swing.JComboBox jComboBox4;
    public static javax.swing.JComboBox jComboBox5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    public static javax.swing.JTable jTable1;
    public static javax.swing.JTextArea jTextArea1;
    public static javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables

 
   
    
}
